buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.10.+'
    }
}

apply plugin: 'android-library'
apply plugin: 'maven'

repositories {
    mavenCentral()
    maven {url 'http://commondatastorage.googleapis.com/maven-repository/'}
}

configurations {
    deployerJars
}

dependencies {
    deployerJars 'com.googlesource.gerrit:gs-maven-wagon:3.3.1'
    compile 'com.android.support:support-v4:[18,)'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java {
                srcDir 'src/'
            }
            res {
                srcDir 'res/'
            }
        }
    }
}

version = "1.5.3"

archivesBaseName = "library"
group = "com.origamilabs"

task createPomFile {
    project.ext.pomFile = pom {
        version = project.version
            artifactId = project.archivesBaseName
        groupId = project.group
        project {
            name 'StaggeredGridView'
            description 'A modified version of Android\'s experimental StaggeredGridView. Includes own OnItemClickListener and OnItemLongClickListener, selector, and fixed position restore.'
            url 'https://github.com/appunite/StaggeredGridView'
            inceptionYear '2013'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm {
                url "https://github.com/appunite/StaggeredGridView"
                connection "https://github.com/appunite/StaggeredGridView.git"
            }
            developers {
                developer {
                    name 'Maurycy Wojtowicz maurycy@origami.com'
                }
            }
        }
    }
}

task install(type: Upload, dependsOn: createPomFile) {
    description = "Upload archives to local repository"
    configuration = configurations.archives
    repositories.mavenInstaller {
        pom = project.ext.pomFile
    }
}

Properties props = new Properties()
def credentialsProperties = file("credentials.properties")
if (credentialsProperties.exists()) {
    props.load(new FileInputStream(credentialsProperties))
}

uploadArchives {
    dependsOn createPomFile
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "gs://maven-repository") {
                authentication(
                        userName: "${props.getProperty('mavenUser', null)}" ,
                        password: "${props.getProperty('mavenPassword', null)}")
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
